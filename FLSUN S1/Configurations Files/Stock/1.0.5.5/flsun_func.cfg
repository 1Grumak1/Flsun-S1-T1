#################################################################
#LED 
#################################################################
[output_pin relay_pin]
pin: PE1
pwm: False
value: 0 # 0 = off ,1 = on

[gcode_macro relay_on]
gcode:
  SET_PIN PIN=relay_pin VALUE=1

[gcode_macro relay_off]
gcode:
  SET_STEPPER_ENABLE STEPPER=extruder ENABLE=0
  SET_PIN PIN=relay_pin VALUE=0

[output_pin box_led]
pin: PC6
pwm: True
value: 1 # 0 = off ,1 = on
cycle_time: 0.0010

[gcode_macro box_led_on]
gcode:
  SET_PIN PIN=box_led VALUE=1

[gcode_macro box_led_off]
gcode:
  SET_PIN PIN=box_led VALUE=0
  
[output_pin laser]
pin: PA1
pwm: False
value: 0 # 0 = off ,1 = on
#cycle_time: 0.010

[gcode_macro laser_on]
gcode:
  SET_PIN PIN=laser VALUE=1

[gcode_macro laser_off]
gcode:
  SET_PIN PIN=laser VALUE=0
  
[output_pin LED_WHITE]
pin: PA12 
pwm: True
value: 1 # 0 = off ,1 = on
cycle_time: 0.010

[output_pin LED_ORANGE]
pin: PD1
pwm: True
value: 0 # 0 = off ,1 = on
cycle_time: 0.010

[output_pin LED_RED]
pin: PD0
pwm: True
value: 0 # 0 = off ,1 = on
cycle_time: 0.010

[gcode_macro screen_led_on]
gcode:
  SET_PIN PIN=LED_RED VALUE={ params.R|default(1) }
  SET_PIN PIN=LED_ORANGE VALUE={ params.O|default(1) }
  SET_PIN PIN=LED_WHITE VALUE={ params.W|default(1) }
  
[gcode_macro screen_led_off]
gcode:
  SET_PIN PIN=LED_RED VALUE=0
  SET_PIN PIN=LED_ORANGE VALUE=0
  SET_PIN PIN=LED_WHITE VALUE=0

######################################################################
#function
######################################################################
[gcode_macro PID_HOTEND]
description: Hotend PID Calibration
gcode:
  {% set HOTEND_TEMP=params.HOTEND_TEMP|default(240)|float %}
  {% if printer.print_stats.state == "Printing" %}
    M117 This macro cannot be used while printing!
  {% else %}
    M117 Hotend PID calibration in progress...
    # SCREEN_LED_ON R=0 O=1 W=0
    SCREEN_LED_ON R=0 O=0 W=1 #20240814 Temporary change
    {% if printer.toolhead.homed_axes != "xyz" %}
      G28
    {% endif %}
    G90
    G1 Z50 F6000
    M400
    M106 S255
    PID_CALIBRATE HEATER=extruder TARGET={HOTEND_TEMP}
    M107
    G28
    SCREEN_LED_ON R=0 O=0 W=1
    M117 Hotend PID calibration finished
    M400
    SAVE_CONFIG
  {% endif %}
  
[gcode_macro PID_BED]
description: Bed PID Calibration
gcode:
  {% set BED_TEMP=params.BED_TEMP|default(60)|float %}
  {% if printer.print_stats.state == "Printing" %}
    M117 This macro cannot be used while printing!
  {% else %}
    M117 BED PID CALIBRATION START!
    # SCREEN_LED_ON R=0 O=1 W=0
    SCREEN_LED_ON R=0 O=0 W=1 #20240814 Temporary change
    {% if printer.toolhead.homed_axes != "xyz" %}
      G28
    {% endif %}
    G90
    G1 Z50 F6000
    M400
    M106 S255
    M117 Start PID Calibration for inner bed...
    PID_CALIBRATE HEATER=heater_bed TARGET={BED_TEMP}
    M117 Start PID Calibration for outer bed...
    PID_CALIBRATE HEATER=HotBed1 TARGET={BED_TEMP}
    M107
    G28
    SCREEN_LED_ON R=0 O=0 W=1
    M117 Bed PID calibration finished
    M400
    SAVE_CONFIG
  {% endif %}

[gcode_macro MEASURING_RESONANCES] #检测共振
description: Measuring Resonances
gcode: 
   M117 MEASURING RESONANCES START !
   SET_STEPPER_ENABLE STEPPER=extruder ENABLE=0
   G28
   SAVE_VARIABLE VARIABLE=resonances_state VALUE=True
   SHAPER_CALIBRATE
   G28
   SAVE_CONFIG

[gcode_macro TIMELAPSE] #延时摄影
description: Timelapse
gcode: 
   M117 Timelapse done!

[output_pin motor_cali_a]
pin: PD13
pwm: False
value: 0
[output_pin motor_cali_b]
pin: PE15
pwm: False
value: 0
[output_pin motor_cali_c]
pin: PB0
pwm: False
value: 0
[gcode_button motor_a]
pin: PD14
press_gcode: 
release_gcode: 
[gcode_button motor_b]
pin: PD8
press_gcode: 
release_gcode: 
[gcode_button motor_c]
pin: PB1
press_gcode: 
release_gcode: 

[gcode_macro CLEAN_CALIBRATE_MOTOR]
description: clean calibrate motor data
gcode:
   M18
   #清除数据信号
   SET_PIN PIN=motor_cali_a VALUE=0
   #G4 P10
   SET_PIN PIN=motor_cali_b VALUE=0
   #G4 P10
   SET_PIN PIN=motor_cali_c VALUE=0
   G4 P290
   SET_PIN PIN=motor_cali_a VALUE=1
   #G4 P10
   SET_PIN PIN=motor_cali_b VALUE=1
   #G4 P10
   SET_PIN PIN=motor_cali_c VALUE=1
   G4 P290
   SET_PIN PIN=motor_cali_a VALUE=0
   #G4 P10
   SET_PIN PIN=motor_cali_b VALUE=0
   #G4 P10
   SET_PIN PIN=motor_cali_c VALUE=0
   G4 P290
   SET_PIN PIN=motor_cali_a VALUE=1
   #G4 P10
   SET_PIN PIN=motor_cali_b VALUE=1
   #G4 P10
   SET_PIN PIN=motor_cali_c VALUE=1
   G4 P290
   SET_PIN PIN=motor_cali_a VALUE=0
   #G4 P10
   SET_PIN PIN=motor_cali_b VALUE=0
   #G4 P10
   SET_PIN PIN=motor_cali_c VALUE=0
   G4 P290
   SET_PIN PIN=motor_cali_a VALUE=1
   #G4 P10
   SET_PIN PIN=motor_cali_b VALUE=1
   #G4 P10
   SET_PIN PIN=motor_cali_c VALUE=1
   G4 P290
   SET_PIN PIN=motor_cali_a VALUE=0
   #G4 P10
   SET_PIN PIN=motor_cali_b VALUE=0
   #G4 P10
   SET_PIN PIN=motor_cali_c VALUE=0
[gcode_macro CALIBRATE_MOTOR_DATA] #电机校准
description: calibrate motor
gcode: 
   M18
   M17
   M18
   #校准信号
   SET_PIN PIN=motor_cali_a VALUE=0
   #G4 P10
   SET_PIN PIN=motor_cali_b VALUE=0
   #G4 P10
   SET_PIN PIN=motor_cali_c VALUE=0
   G4 P200
   SET_PIN PIN=motor_cali_c VALUE=1
   #G4 P10
   SET_PIN PIN=motor_cali_a VALUE=1
   #G4 P10
   SET_PIN PIN=motor_cali_b VALUE=1
   G4 P200
   SET_PIN PIN=motor_cali_b VALUE=0
   #G4 P10
   SET_PIN PIN=motor_cali_c VALUE=0
   #G4 P10
   SET_PIN PIN=motor_cali_a VALUE=0
   G4 P200
   SET_PIN PIN=motor_cali_a VALUE=1
   #G4 P10
   SET_PIN PIN=motor_cali_b VALUE=1
   #G4 P10
   SET_PIN PIN=motor_cali_c VALUE=1
   G4 P200
   SET_PIN PIN=motor_cali_c VALUE=0
   #G4 P10
   SET_PIN PIN=motor_cali_a VALUE=0
   #G4 P10
   SET_PIN PIN=motor_cali_b VALUE=0
   G4 P200
   SET_PIN PIN=motor_cali_b VALUE=1
   #G4 P10
   SET_PIN PIN=motor_cali_c VALUE=1
   #G4 P10
   SET_PIN PIN=motor_cali_a VALUE=1
   G4 P200
   SET_PIN PIN=motor_cali_a VALUE=0
   #G4 P10
   SET_PIN PIN=motor_cali_b VALUE=0
   #G4 P10
   SET_PIN PIN=motor_cali_c VALUE=0
   G4 P200
   SET_PIN PIN=motor_cali_c VALUE=1
   #G4 P10
   SET_PIN PIN=motor_cali_a VALUE=1
   #G4 P10
   SET_PIN PIN=motor_cali_b VALUE=1
   G4 P200
   SET_PIN PIN=motor_cali_b VALUE=0
   #G4 P10
   SET_PIN PIN=motor_cali_c VALUE=0
   #G4 P10
   SET_PIN PIN=motor_cali_a VALUE=0
   G4 P200
   SET_PIN PIN=motor_cali_a VALUE=1
   #G4 P10
   SET_PIN PIN=motor_cali_b VALUE=1
   #G4 P10
   SET_PIN PIN=motor_cali_c VALUE=1
   G4 P200
   SET_PIN PIN=motor_cali_c VALUE=0
   #G4 P10
   SET_PIN PIN=motor_cali_a VALUE=0
   #G4 P10
   SET_PIN PIN=motor_cali_b VALUE=0
   M17
   G4 P30000 #校准时间
   
[gcode_macro CALIBRATE_MOTOR] #电机校准
description: calibrate motor
gcode: 
   G28
   G90
   G1 Z10 F6000
   CLEAN_CALIBRATE_MOTOR
   CALIBRATE_MOTOR_DATA
   M117 motor a is ok!
   M117 motor b is ok!
   M117 motor c is ok!
   G28
   M117 calibrate motor done!

######################################################################
#filament sensor
######################################################################
[filament_switch_sensor filament_sensor] #断料检测
pause_on_runout: False
#runout_gcode:  # pause when filament runout
#insert_gcode: RESUME  
switch_pin: PA11

[filament_motion_sensor my_sensor] #堵料检测
detection_length: 18.0 #这个耗材距离之内，开关状态没有发生变化，即触发
#   The minimum length of filament pulled through the sensor to trigger
#   a state change on the switch_pin
#   Default is 7 mm.
extruder: extruder
#   The name of the extruder section this sensor is associated with.
#   This parameter must be provided.
switch_pin: PA10
#insert_gcode: RESUME
pause_on_runout: False # This can be set to false to debug false positives putting the sensor in "monitor mode". The printer will not pause but it will run the runout_gcode below. 
#event_delay: 20.0
#pause_delay: 5.0
runout_gcode:
	{% if printer.print_stats.state == "printing" %}
		{% if printer["filament_switch_sensor filament_sensor"].filament_detected %}
			PAUSE
			# screen_led_on R=0 O=1 W=0
      SCREEN_LED_ON R=0 O=0 W=1 #20240814 Temporary change
			M117 Filament Clog Detected!
		{% else %}
		    #PAUSE
			PAUSE_AFTER_D D=500
			#M117 Filament Runout Detected!
		{% endif %}
	{% endif %}

[gcode_macro PAUSE_AFTER_D]
description: Trigger to pause the print after a further 'd' mm has been extruded
variable_end_d: 0 #create variable "END_D" which is associated with the PAUSE_AFTER_D gcode macro
gcode:
  {% set d_start = printer.print_stats.filament_used|float %} #starting point is whatever the filament used is when PAUSE_AFTER_D is called
  {% set d_end = (d_start + params.D|float)|float %} #end point is start + D parameter
  SET_GCODE_VARIABLE MACRO=PAUSE_AFTER_D VARIABLE=end_d VALUE={d_end} #write the end value to the END_D gcode variable to access later
  M117 Pause at {printer["gcode_macro PAUSE_AFTER_D"].end_d|round(2)}
  UPDATE_DELAYED_GCODE ID=PAUSE_AT_D DURATION=1 #trigger the delayed gcode below after 1 second

[delayed_gcode PAUSE_AT_D]
initial_duration: 0 #if initial_duration is zero, the delayed gcode won't start by default
gcode:
  {% set d_current = printer.print_stats.filament_used|float %} #get the current filament used
  {% if d_current < printer["gcode_macro PAUSE_AFTER_D"].end_d %} #if we aren't at the stopping point
    M117 Stopping {d_current|round(2)} {printer["gcode_macro PAUSE_AFTER_D"].end_d|round(2)}
    UPDATE_DELAYED_GCODE ID=PAUSE_AT_D DURATION=1 #restart the timer on the delayed gcode
  {% else %}
    PAUSE
    M117 Filament Runout Detected!
    # screen_led_on R=0 O=1 W=0
    SCREEN_LED_ON R=0 O=0 W=1 #20240814 Temporary change
    UPDATE_DELAYED_GCODE ID=PAUSE_AT_D DURATION=0 #set the delayed gcode duration back to zero so it doesn't keep triggering
  {% endif %}

#######################################################################################
#fan
#######################################################################################
[fan_generic box_fan] #箱体风扇 SET_FAN_SPEED FAN=box_fan SPEED=     速度这里填0.0~1.0
pin:PB4
#max_power:
#shutdown_speed:
#cycle_time:
#hardware_pwm:
#kick_start_time:
#off_below:
#tachometer_pin:
#tachometer_ppr:
#tachometer_poll_interval:
#enable_pin:
#   See the "fan" section for a description of the above parameters.

[fan_generic drying_box_fan] #箱体风扇 SET_FAN_SPEED FAN=drying_box_fan SPEED=     速度这里填0.0~1.0
pin:PA8
#max_power:
#shutdown_speed:
#cycle_time:
#hardware_pwm:
#kick_start_time:
#off_below:
#tachometer_pin:
#tachometer_ppr:
#tachometer_poll_interval:
#enable_pin:
#   See the "fan" section for a description of the above parameters.

[output_pin drying_box_heater]
pin: PA9
pwm: True
value: 0 # 0 = off ,1 = on
#cycle_time: 0.010

[gcode_macro drying_box_off]
gcode:
  SET_PIN PIN=drying_box_heater VALUE=0
  
[gcode_macro drying_box_1]
gcode:
  SET_PIN PIN=drying_box_heater VALUE=1.0
    
#############################################################################################
#power loss
#############################################################################################
[gcode_macro SHUTDOWN]
gcode:
       {action_call_remote_method("shutdown_machine")}
[filament_switch_sensor power_loss]  
pause_on_runout: False
switch_pin: PD3
event_delay: 0.01
pause_delay: 0.01
runout_gcode: 
            {% if printer.print_stats.state == "printing" %}
              {% set file_position = printer.virtual_sdcard.file_position %} #save file position
              SAVE_VARIABLE VARIABLE=file_position VALUE={file_position}
              {% set e_pos = printer.gcode_move.gcode_position.e %}
              SAVE_VARIABLE VARIABLE=e_pos VALUE={e_pos}
              {% set x_pos = printer.gcode_move.gcode_position.x %}
              SAVE_VARIABLE VARIABLE=x_pos VALUE={x_pos}
              {% set y_pos = printer.gcode_move.gcode_position.y %}
              SAVE_VARIABLE VARIABLE=y_pos VALUE={y_pos}
              {% set z_pos = printer.gcode_move.gcode_position.z %}
              SAVE_VARIABLE VARIABLE=z_pos VALUE={z_pos}
              {% set print_duration = printer.print_stats.print_duration %}
              SAVE_VARIABLE VARIABLE=print_duration VALUE={print_duration}
              {% set fan_speed = printer.fan.speed|float %}
              SAVE_VARIABLE VARIABLE=fan_speed VALUE={fan_speed}
              {% set nozzle_temp = printer.extruder.target|float %}
              SAVE_VARIABLE VARIABLE=nozzle_temp VALUE={nozzle_temp}
              {% set bed_temp = printer.heater_bed.target|float %}
              SAVE_VARIABLE VARIABLE=bed_temp VALUE={bed_temp}
			        SAVE_VARIABLE VARIABLE=was_interrupted VALUE=True              
              STEPPER_STOP
              SHUTDOWN
              G4 P5000
            {% endif %} 
[force_move]
enable_force_move: True

[gcode_macro RESUME_INTERRUPTED]
gcode = 
    {% set file_position = printer.save_variables.variables.file_position %}
    {% set e_pos = printer.save_variables.variables.e_pos %}
    {% set x_pos = printer.save_variables.variables.x_pos %}
    {% set y_pos = printer.save_variables.variables.y_pos %}
    {% set z_pos = printer.save_variables.variables.z_pos %}
    {% set last_file = params.GCODE_FILE|default(printer.save_variables.variables.sd_filename)|string %}
    {% set print_duration = printer.save_variables.variables.print_duration %}
    {% set fan_speed = printer.save_variables.variables.fan_speed %}
    {% set nozzle_temp = printer.save_variables.variables.nozzle_temp %}
    {% set bed_temp = printer.save_variables.variables.bed_temp %}
    G28
    SAVE_VARIABLE VARIABLE=plr_flag VALUE=True
    M104 S{nozzle_temp} ; set nozzle temperature
    M140 S{bed_temp}  ; set bed temperature
    M109 S{nozzle_temp}
    M190 S{bed_temp} 
    {% set fan_speed = fan_speed * 255 %}
    M106 S{fan_speed} ; enable fan
    G90
    G92 E{e_pos}
    G1 X{x_pos} Y{y_pos} Z{z_pos}
    POWER_LOSS_RESTART_PRINT FILENAME='{last_file}' FILEPOSITION={file_position} PRINT_DURATION={print_duration}
  
[gcode_macro START_PRINT_RESUME]
gcode:
    {% set sd_filename = printer.virtual_sdcard.file_path|string %}
    SAVE_VARIABLE VARIABLE=sd_filename VALUE='"{sd_filename}"'
    SAVE_VARIABLE VARIABLE=was_interrupted VALUE=False
    {% set file_position = printer.save_variables.variables.file_position %}
    SAVE_VARIABLE VARIABLE=file_position VALUE='"{file_position}"'
    {% set x_pos = printer.save_variables.variables.x_pos %}
    SAVE_VARIABLE VARIABLE=x_pos VALUE='"{x_pos}"'
    {% set y_pos = printer.save_variables.variables.y_pos %}
    SAVE_VARIABLE VARIABLE=y_pos VALUE='"{y_pos}"'
    {% set z_pos = printer.save_variables.variables.z_pos %}
    SAVE_VARIABLE VARIABLE=z_pos VALUE='"{z_pos}"'
    {% set e_pos = printer.save_variables.variables.e_pos %}
    SAVE_VARIABLE VARIABLE=e_pos VALUE='"{e_pos}"'
    CLEAR_PAUSE
    M105 S1
    screen_led_on R=0 O=0 W=1
    M114 F0

[gcode_macro RESTORE_E_CURRENT]
gcode:
    SET_TMC_CURRENT STEPPER=extruder CURRENT=1.2

[gcode_macro START_PRINT]
gcode:
    relay_on
    {% set sd_filename = printer.virtual_sdcard.file_path|string %}
    SAVE_VARIABLE VARIABLE=sd_filename VALUE='"{sd_filename}"'
    SAVE_VARIABLE VARIABLE=was_interrupted VALUE=False
    SAVE_VARIABLE VARIABLE=file_position VALUE=0
    SAVE_VARIABLE VARIABLE=x_pos VALUE=0.0
    SAVE_VARIABLE VARIABLE=y_pos VALUE=0.0
    SAVE_VARIABLE VARIABLE=z_pos VALUE=0.0
    SAVE_VARIABLE VARIABLE=e_pos VALUE=0.0
    SET_TMC_CURRENT STEPPER=extruder CURRENT=0.8
    SET_VELOCITY_LIMIT ACCEL=40000
    SET_VELOCITY_LIMIT SQUARE_CORNER_VELOCITY=5
    SET_VELOCITY_LIMIT ACCEL_TO_DECEL=6000
    CLEAR_PAUSE
    M105 S1
    screen_led_on R=0 O=0 W=1
    M106 S255
    G4 P5000

[gcode_macro END_PRINT]
gcode:
    SAVE_VARIABLE VARIABLE=was_interrupted VALUE=False
    SET_STEPPER_ENABLE STEPPER=extruder ENABLE=0
    M106 S153
    UPDATE_DELAYED_GCODE ID=heatsink DURATION=60
	
[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
  M106 S0
  TURN_OFF_HEATERS
  CANCEL_PRINT_BASE
  SET_STEPPER_ENABLE STEPPER=extruder ENABLE=0
  M105 S1
  M106 S153
  UPDATE_DELAYED_GCODE ID=heatsink DURATION=60
  G28

[delayed_gcode heatsink]
initial_duration: 0 #if initial_duration is zero, the delayed gcode won't start by default
gcode:
    M106 S0
    UPDATE_DELAYED_GCODE ID=heatsink DURATION=0	
